---
# this is a trivial example of how to do a nested loop.

#- hosts: all
#  tasks:
#    - shell: echo "nested test a={{ item[0] }} b={{ item[1] }} c={{ item[2] }}"
#      with_nested:
#        - [ 'red', 'blue', 'green' ]
#        - [ 1, 2, 3 ]
#        - [ 'up', 'down', 'strange']
#
# you can reference a raw variable name without putting it in {{ brackets }}
- name: users 
  hosts: new
  vars:
    userlist:
    - root
    - marekpl
    - krzysztofc
    homedirs:
    - /root
    - /home/marekpl
    - /home/krzysztofc

  tasks:
    - name: create users
      user:
        name: "{{ item }}"
        groups: sudo
        shell: /bin/bash
        generate_ssh_key: yes
        state: present
      with_items: "{{ userlist }}"
      when: item != "root"
      become: True

    - name: copy files from local to remote
      copy:
        src: "{{ item }}"
        dest: /tmp/
      with_fileglob:
        - files/*.tgz
      become: True

    - name: unpack user's dot files & utils
      unarchive:
        src: /tmp/home.tgz
        dest: "{{ item.1 }}"
        owner: "{{ item.0 }}"
        group: "{{ item.0 }}"
        remote_src: yes
      with_together:
        - "{{ userlist }}"
        - "{{ homedirs }}"
      become: True

    - name: fix users homes permisions
      file:
        path: "{{ item.1 }}"
        mode: 0700
        owner: "{{ item.0 }}"
        group: "{{ item.0 }}"
      with_together:
        - "{{ userlist }}"
        - "{{ homedirs }}"
      become: True
#    - name: test2
#      shell: echo "nested test a={{ item[0] }} b={{ item[1] }} }}"
#      with_nested:
#        - ['root', 'marekpl', 'krzysztofc']
#        - [1, 2]

#- set_fact:
#tomcat_value: "{{ tomcat_1_value if (filepath == '/var/opt/tomcat_1') else tomcat_2_value }}"
