- name: local pre-installation script
  hosts: localhost
  tasks:
    - local_action: script local_scripts/pre-install.sh

- name: standard installation
  hosts: new
  vars:
    userlist:
    - root
    - marekpl
    - krzysztofc
    homedirs:
    - /root
    - /home/marekpl
    - /home/krzysztofc

  tasks:

    - name: route
      command: ip route add default via 192.168.123.1 dev ens3
      ignore_errors: True
      become: true
 
    - name: aka "wajig update"
      apt:
        update_cache: yes
      become: True

    - name: install packages
      apt: name={{ item }} state=installed
      with_items:
        - apt-file 
        - apt-transport-https
        - dnsutils 
        - gawk
        - git
        - htop 
        - less
        - lsb-release 
        - lsof
        - mc 
        - mlocate 
        - net-tools
        - netcat-openbsd
        - ntp
        - ntpdate
        - openssh-server
        - openssl
        - parted
        - pv
        - rsync
        - sudo
        - tcpdump
        - tmux
        - tree
        - vim
        - wajig
      become: True

    - name: aka "wajig upgrade"
      apt:
        upgrade: full
        autoremove: yes
        autoclean: yes
      become: yes

    - name: network configuration
      script: remote_scripts/net_interface.sh ens3 ens4 >> /etc/network/interfaces
      become: True

    - name: create users
      user:
        name: "{{ item }}"
        groups: sudo
        shell: /bin/bash
        #generate_ssh_key: yes
        state: present
      with_items: "{{ userlist }}"
      when: item != "root"
      become: True

    - name: copy files from local to remote
      copy:
        src: "{{ item }}"
        dest: /tmp/
      with_fileglob:
        - files/*.tgz
      become: True

    - name: unpack user's dot files & utils
      unarchive:
        src: /tmp/home.tgz
        dest: "{{ item.1 }}"
        owner: "{{ item.0 }}"
        group: "{{ item.0 }}"
        remote_src: yes
      with_together:
        - "{{ userlist }}"
        - "{{ homedirs }}"
      become: True

    - name: fix users homes permisions
      file:
        path: "{{ item.1 }}"
        mode: 0700
        owner: "{{ item.0 }}"
        group: "{{ item.0 }}"
      with_together:
        - "{{ userlist }}"
        - "{{ homedirs }}"
      become: True

    - name: user's ssh keys
      copy:
        src: "files/{{ item.0 }}.id_rsa.pub"
        dest: "{{ item.1 }}/.ssh/authorized_keys"
        owner: "{{ item.0 }}"
        group: "{{ item.0 }}"
        mode: 0600
      with_together:
        - "{{ userlist }}"
        - "{{ homedirs }}"
      when: item.0 != "root"
      become: True

    - name: unpack system-wide conf
      unarchive:
        src: /tmp/etc.tgz
        dest: /etc
        remote_src: yes
        owner: root
        group: root
        mode: 644
      become: True

    - name: some useful links
      shell: ln -s tmux t
      args:
        chdir: /usr/bin
      become: True

    - name: root ssh login must be forbidden
      shell: sed -i.orig -e 's/^PermitRootLogin\s.*\|^#.*PermitRootLogin\s.*/PermitRootLogin no/' /etc/ssh/sshd_config
      become: true
    - debug: msg="ssh daemon on {{ inventory_hostname }} should be restarted" verbosity=0

    - name: additional locales conf
      shell: sed -i.orig -e 's/.*pl_PL\.UTF-8.*/pl_PL.UTF-8 UTF-8/' -e 's/.*en_US\.UTF-8.*/en_US.UTF-8 UTF-8/' /etc/locale.gen
      become: true

    - name: additional locales generate
      shell: locale-gen
      become: true

    - name: hosts
      template:
        src: templates/hosts
        dest: /etc/hosts
        owner: root
        group: root
        mode: 0644
      become: yes

    - name: hostname
      template:
        src: templates/hostname
        dest: /etc/hostname
        owner: root
        group: root
        mode: 0644
      become: yes

